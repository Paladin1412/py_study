<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.netease.ad.omp.dao.stat.mapper.RevenueStatisticsMapper">

    <!-- 查询代理商收入列表 -->
    <select id="selectAgentRevenue" parameterType="com.netease.ad.omp.web.controller.stat.vo.AdvRevenueQueryVo" resultType="com.netease.ad.omp.vo.AgentRevenueVo">
        SELECT r.agent_id AS agentId,a.agent_name AS agentName,SUM(r.revenue) AS revenue,SUM(r.expend) AS expend,SUM(r.exposures) AS exposures,SUM(r.clicks) AS clicks
        FROM (
                SELECT agent_id,revenue,expend,exposures,clicks FROM sta_agent_day_revenue
                WHERE 1=1
                <if test="startTime != null and startTime !='' " >
                    AND sta_date >= #{startTime}
                </if>
                <if test="endTime != null and endTime != '' " >
                    AND #{endTime} >= sta_date
                </if>
        ) r
        LEFT JOIN ad_agent a ON a.agent_id = r.agent_id
        WHERE 1=1
        <if test="agentIdOrName != null and agentIdOrName !='' " >
            AND (a.agent_name like CONCAT('%',#{agentIdOrName},'%') OR r.agent_id like  CONCAT('%',#{agentIdOrName},'%'))
        </if>
        GROUP BY r.agent_id
        ORDER BY r.agent_id
    </select>

    <!-- 查询行业收入列表 -->
    <select id="selectIndustryRevenue" parameterType="com.netease.ad.omp.web.controller.stat.vo.IndustryRevenueQueryVo" resultType="com.netease.ad.omp.vo.IndustryRevenueVo">
        SELECT  m.category,(CASE WHEN m.category=1 THEN '易效' WHEN m.category=2 THEN 'NEX' END) AS categoryName,
                p.name AS industryName,s.name AS subIndustryName,m.revenue,m.expend,m.exposures,m.clicks
        FROM (
                SELECT  category,industry_id,sub_industry_id,SUM(revenue) AS revenue,
                        SUM(expend) AS expend,SUM(exposures) exposures,SUM(clicks) AS clicks
                  FROM  sta_adv_day_revenue WHERE 1=1
                        <if test="startTime != null and startTime !='' " >
                            AND sta_date >= #{startTime}
                        </if>
                        <if test="endTime != null and endTime !='' " >
                            AND #{endTime} >= sta_date
                        </if>
                        <if test="category != null" >
                            AND category = #{category}
                        </if>
                        <if test="industry != null" >
                            AND industry_id = #{industry}
                        </if>
                        <if test="subIndustry != null" >
                            AND sub_industry_id = #{subIndustry}
                        </if>
                  GROUP BY category,industry_id,sub_industry_id
            ) m
        LEFT JOIN sys_industry p ON m.industry_id = p.id
        LEFT JOIN sys_industry s ON m.sub_industry_id = s.id
        WHERE 1=1
        ORDER BY p.name,s.name
    </select>

    <!-- 查询位置收入列表 -->
    <select id="selectPositionRevenue" parameterType="com.netease.ad.omp.web.controller.stat.vo.PositionRevenueQueryVo" resultType="com.netease.ad.omp.vo.PosRevenueVo">
        SELECT  c.name AS columnName,p.name AS positionName,r.advertiser_id AS advertiserId,a.name AS advertiserName,
                (CASE WHEN a.channel=1 THEN '直客' WHEN a.channel=2 THEN '代理商' END) AS channelName,
                (CASE WHEN a.category=1 THEN '易效' WHEN a.category=2 THEN 'NEX' END) AS categoryName,
                r.revenue,r.expend,r.exposures,r.clicks
        FROM (
                  SELECT sta_date,pos_id,category,advertiser_id,SUM(revenue) AS revenue,SUM(expend) AS expend,SUM(exposures) AS exposures,SUM(clicks) AS clicks
                    FROM sta_pos_day_revenue
                   WHERE 1=1
                        <if test="startTime != null  and startTime !='' " >
                            AND sta_date >= #{startTime}
                        </if>
                        <if test="endTime != null  and endTime !='' " >
                            AND #{endTime} >= sta_date
                        </if>
                    GROUP BY advertiser_id,pos_id,category
              ) r
        LEFT JOIN ad_position p ON r.pos_id = p.id AND p.category=r.category
        LEFT JOIN ad_column c ON c.code = p.category
        LEFT JOIN ad_advertiser a ON a.dsp_advertiser_id = r.advertiser_id

        WHERE 1=1
        <if test="category != null" >
            AND a.category = #{category}
        </if>
        <if test="column != null" >
            AND c.id = #{column}
        </if>
        <if test="position != null" >
            AND r.pos_id = #{position}
        </if>
        ORDER BY c.name,p.name
    </select>



    <!-- 插入产品线收入小时统计表-->
    <insert id="insertBasicHourRevenue" parameterType="java.util.List">
        INSERT INTO sta_basic_revenue(category,sta_date,sta_hour,sta_quater,revenue,expend,create_time,update_time)
        VALUES
        <foreach collection="list" item="basicRevenue" index="index" separator=",">
            (
            #{basicRevenue.category},#{basicRevenue.staDate},#{basicRevenue.hour},#{basicRevenue.quarter},
            #{basicRevenue.revenue},#{basicRevenue.expend},#{basicRevenue.createTime},#{basicRevenue.updateTime}
            )
        </foreach>
    </insert>

    <!-- 删除指定日期范围内的产品线小时收入统计数据 -->
    <delete id="deleteYPBasicHourRevenue" parameterType="java.util.HashMap">
        DELETE FROM sta_basic_revenue WHERE SUBSTR(sta_date,1,8) >=#{startTime} AND #{endTime}>= SUBSTR(sta_date,1,8)
        AND category=#{category}
    </delete>

    <!-- 删除指定日期范围内的产品线小时收入统计数据 -->
    <delete id="deleteP4pNexBasicHourRevenue" parameterType="java.util.HashMap">
        DELETE FROM sta_basic_revenue WHERE sta_date > #{startTime} AND #{endTime}>= sta_date AND category IN (1,2)
    </delete>

    <!-- 插入产品线收入天统计表-->
    <insert id="insertBasicDayRevenue" parameterType="java.lang.Long">
		INSERT INTO sta_basic_day_revenue(sta_date,category,revenue,expend,create_time,update_time)
        SELECT t.sta_day,t.category,SUM(t.revenue) AS revenue,SUM(t.expend) AS expend,NOW(),NOW()
        FROM (
                SELECT category,SUBSTR(sta_date,1,8) sta_day,revenue,expend
                FROM sta_basic_revenue WHERE SUBSTR(sta_date,1,8)=#{day}
        ) t GROUP BY t.sta_day,t.category
	</insert>

    <!-- 删除指定日期范围内的产品线天收入统计数据 -->
    <delete id="deleteBasicDayRevenue" parameterType="java.util.HashMap">
        DELETE FROM sta_basic_day_revenue WHERE sta_date>=#{startTime} and #{endTime}>= sta_date
        <if test="category != null" >
            AND category >= #{category}
        </if>
    </delete>

    <!--        ###################################         代理商部分开始           ################################### -->

    <!-- 插入代理商收入小时统计表-->
    <insert id="insertAgentHourRevenue" parameterType="java.util.List">
        INSERT INTO sta_agent_hour_revenue(sta_date,agent_id,expend,exposures,clicks,create_time,update_time)
        VALUES
        <foreach collection="list" item="agentHourRevenue" index="index" separator=",">
            (
            #{agentHourRevenue.staDate},#{agentHourRevenue.agentId},#{agentHourRevenue.expend},
            #{agentHourRevenue.exposures},#{agentHourRevenue.clicks},#{agentHourRevenue.createTime},#{agentHourRevenue.updateTime}
            )
        </foreach>
    </insert>

    <!-- 删除指定日期范围内的代理商小时收入统计数据 -->
    <delete id="deleteAgentHourRevenue" parameterType="java.util.HashMap">
        DELETE FROM sta_agent_hour_revenue WHERE sta_date > #{startTime} and #{endTime}>= sta_date
    </delete>

    <!-- 插入代理商收入天统计表-->
    <insert id="insertAgentDayRevenue" parameterType="java.lang.Long">
		INSERT INTO sta_agent_day_revenue(sta_date,agent_id,revenue,expend,exposures,clicks,create_time,update_time)
        SELECT t.sta_day,t.agent_id,SUM(t.expend) AS expend,SUM(t.exposures) AS exposures,SUM(t.clicks) AS clicks,NOW(),NOW()
        FROM (
                SELECT SUBSTR(sta_date,1,8) sta_day,agent_id,expend,exposures,clicks
                FROM sta_agent_hour_revenue WHERE SUBSTR(sta_date,1,8)=#{day}
        ) t GROUP BY t.sta_day,t.agent_id
	</insert>

    <!-- 删除指定日期范围内的代理商天收入统计数据 -->
    <delete id="deleteAgentDayRevenue" parameterType="java.util.HashMap">
        DELETE FROM sta_agent_day_revenue WHERE sta_date>=#{startTime} and #{endTime}>= sta_date
    </delete>

    <!-- 插入代理商收入月统计表-->
    <insert id="insertAgentMonthRevenue" parameterType="java.util.List">
        INSERT INTO sta_agent_month_revenue(sta_month,agent_id,revenue,expend,exposures,clicks)
        SELECT t.sta_month,t.agent_id,t.revenue,t.expend,t.exposures,t.clicks
        FROM (
        SELECT SUBSTR(sta_date,1,6) sta_month,agent_id,SUM(revenue) AS revenue,SUM(expend) AS expend,SUM(exposures) AS exposures,SUM(clicks) AS clicks
        FROM sta_agent_hour_revenue WHERE SUBSTR(sta_date,1,6)=#{month} GROUP BY sta_month,agent_id
        ) t
    </insert>
    <!-- 删除指定月的代理商月收入统计数据 -->
    <delete id="deleteAgentMonthRevenue" parameterType="java.lang.Integer">
        DELETE FROM sta_agent_month_revenue WHERE sta_month =#{month}
    </delete>

    <!--        ###################################         代理商部分结束           ################################### -->

    <!-- 插入广告主、行业收入月统计表-->
    <insert id="insertAdvertiserMonthRevenue" parameterType="java.util.List">
        INSERT INTO sta_advertiser_month_revenue(sta_month,agent_id,revenue,expend,exposures,clicks)
        SELECT t.sta_month,t.agent_id,t.revenue,t.expend,t.exposures,t.clicks
        FROM (
                SELECT SUBSTR(sta_date,1,6) sta_month,advertiser_id,industry_id,sub_industry_id,
                       SUM(revenue) AS revenue,SUM(expend) AS expend,SUM(exposures) AS exposures,SUM(clicks) AS clicks
                  FROM sta_adv_hour_revenue
                 WHERE SUBSTR(sta_date,1,6)=#{month} GROUP BY sta_month,advertiser_id,industry_id,sub_industry_id
        ) t
    </insert>

    <!-- 删除指定日期范围内的广告主、行业月收入统计数据 -->
    <delete id="deleteAdvertiserMonthRevenue" parameterType="java.lang.Integer">
        DELETE FROM sta_advertiser_month_revenue WHERE sta_month = #{month}
    </delete>

    <!-- 插入资源位收入小时统计表-->
    <insert id="insertPositionHourRevenue" parameterType="java.util.List">
        INSERT INTO sta_pos_hour_revenue(sta_date,pos_id,category,advertiser_id,expend,exposures,clicks,create_time,update_time)
        VALUES
        <foreach collection="list" item="positionHourRevenue" index="index" separator=",">
            (
            #{positionHourRevenue.staDate},#{positionHourRevenue.posId},#{positionHourRevenue.category},#{positionHourRevenue.advertiserId},
            #{positionHourRevenue.expend},#{positionHourRevenue.exposures},#{positionHourRevenue.clicks},#{positionHourRevenue.createTime},
            #{positionHourRevenue.updateTime}
            )
        </foreach>
    </insert>
    <!-- 删除指定日期范围内的资源位小时收入统计数据 -->
    <delete id="deletePositionHourRevenue" parameterType="java.util.HashMap">
        DELETE FROM sta_pos_hour_revenue WHERE sta_date > #{startTime} and #{endTime}>= sta_date
    </delete>

    <!-- 插入资源位收入天统计表-->
    <insert id="insertPositionDayRevenue" parameterType="java.util.List">
        INSERT INTO sta_pos_day_revenue(sta_date,pos_id,category,advertiser_id,revenue,expend,exposures,clicks,create_time,update_time)
        SELECT t.sta_day,t.pos_id,t.category,t.advertiser_id,SUM(t.expend) AS expend,SUM(t.exposures) AS exposures,SUM(t.clicks) AS clicks,NOW(),NOW()
        FROM (
                SELECT SUBSTR(sta_date,1,8) sta_day,pos_id,category,advertiser_id,expend,exposures,clicks
                FROM sta_pos_hour_revenue WHERE SUBSTR(sta_date,1,8)=#{day}
        ) t GROUP BY t.sta_day,t.pos_id,t.category,t.advertiser_id
    </insert>
    <!-- 删除指定日期范围内的广告位天收入统计数据 -->
    <delete id="deletePositionDayRevenue" parameterType="java.util.HashMap">
        DELETE FROM sta_pos_day_revenue WHERE sta_date>=#{startTime} and #{endTime}>= sta_date
    </delete>


    <!-- 查询行业收入列表 -->
    <select id="selectAllPosition" resultType="com.netease.ad.omp.entity.position.PositionFictionary">
      SELECT  ch.id AS id ,ch.name AS NAME ,ch.code AS code, 1 AS TYPE,  0  AS parentId  FROM  `ad_channel` ch
        UNION ALL
        SELECT  co.id AS id ,co.name AS NAME ,co.code AS code, 2 AS TYPE,  co.channel_id  AS parentId  FROM  ad_column co
        UNION ALL
        SELECT  po.id AS id ,po.name  AS NAME ,po.code AS code, 3 AS TYPE,  po.column_id  AS parentId  FROM  ad_position po
    </select>

</mapper>